[{"/home/jung0han/Projects/mcqms-react-graphql/client/src/index.js":"1","/home/jung0han/Projects/mcqms-react-graphql/client/src/App.js":"2","/home/jung0han/Projects/mcqms-react-graphql/client/src/reportWebVitals.js":"3","/home/jung0han/Projects/mcqms-react-graphql/client/src/constants.js":"4","/home/jung0han/Projects/mcqms-react-graphql/client/src/components/CreateLink.js":"5","/home/jung0han/Projects/mcqms-react-graphql/client/src/components/LinkList.js":"6","/home/jung0han/Projects/mcqms-react-graphql/client/src/components/Login.js":"7","/home/jung0han/Projects/mcqms-react-graphql/client/src/components/Search.js":"8","/home/jung0han/Projects/mcqms-react-graphql/client/src/components/Header.js":"9","/home/jung0han/Projects/mcqms-react-graphql/client/src/container/layout/HeadMenu.js":"10","/home/jung0han/Projects/mcqms-react-graphql/client/src/container/layout/SideMenu.js":"11","/home/jung0han/Projects/mcqms-react-graphql/client/src/container/pages/DevManage/RequestList.js":"12","/home/jung0han/Projects/mcqms-react-graphql/client/src/components/Link.js":"13","/home/jung0han/Projects/mcqms-react-graphql/client/src/utils.js":"14"},{"size":2061,"mtime":1609715797381,"results":"15","hashOfConfig":"16"},{"size":1453,"mtime":1609715797381,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1608170444959,"results":"18","hashOfConfig":"16"},{"size":73,"mtime":1609715797381,"results":"19","hashOfConfig":"16"},{"size":2315,"mtime":1609715797381,"results":"20","hashOfConfig":"16"},{"size":4386,"mtime":1609715797381,"results":"21","hashOfConfig":"16"},{"size":2924,"mtime":1609715797381,"results":"22","hashOfConfig":"16"},{"size":1143,"mtime":1609715797381,"results":"23","hashOfConfig":"16"},{"size":1504,"mtime":1609715797381,"results":"24","hashOfConfig":"16"},{"size":971,"mtime":1609715797381,"results":"25","hashOfConfig":"16"},{"size":637,"mtime":1609733208189,"results":"26","hashOfConfig":"16"},{"size":8039,"mtime":1609743833657,"results":"27","hashOfConfig":"16"},{"size":2265,"mtime":1609715797381,"results":"28","hashOfConfig":"16"},{"size":1207,"mtime":1609715797381,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"qp39q6",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/jung0han/Projects/mcqms-react-graphql/client/src/index.js",[],["60","61"],"/home/jung0han/Projects/mcqms-react-graphql/client/src/App.js",[],"/home/jung0han/Projects/mcqms-react-graphql/client/src/reportWebVitals.js",[],"/home/jung0han/Projects/mcqms-react-graphql/client/src/constants.js",[],"/home/jung0han/Projects/mcqms-react-graphql/client/src/components/CreateLink.js",[],"/home/jung0han/Projects/mcqms-react-graphql/client/src/components/LinkList.js",["62"],"import React from \"react\";\nimport Link from \"./Link\";\nimport { useHistory } from \"react-router\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { LINKS_PER_PAGE } from \"../constants\";\nimport { Pagination } from \"antd\";\n\nexport const FEED_QUERY = gql`\n  query FeedQuery($take: Int, $skip: Int, $orderBy: LinkOrderByInput) {\n    feed(take: $take, skip: $skip, orderBy: $orderBy) {\n      id\n      links {\n        id\n        createdAt\n        url\n        description\n        postedBy {\n          id\n          name\n        }\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n      count\n    }\n  }\n`;\n\nconst NEW_LINKS_SUBSCRIPTION = gql`\n  subscription {\n    newLink {\n      id\n      url\n      description\n      createdAt\n      postedBy {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst NEW_VOTES_SUBSCRIPTION = gql`\n  subscription {\n    newVote {\n      id\n      link {\n        id\n        url\n        description\n        createdAt\n        postedBy {\n          id\n          name\n        }\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n      user {\n        id\n      }\n    }\n  }\n`;\n\nconst getLinksToRender = (isNewPage, data) => {\n  if (isNewPage) {\n    return data.feed.links;\n  }\n  const rankedLinks = data.feed.links.slice();\n  rankedLinks.sort((l1, l2) => l2.votes.length - l1.votes.length);\n  return rankedLinks;\n};\n\nconst getQueryVariables = (isNewPage, page) => {\n  const skip = isNewPage ? (page - 1) * LINKS_PER_PAGE : 0;\n  const take = isNewPage ? LINKS_PER_PAGE : 10;\n  const orderBy = { createdAt: \"desc\" };\n  return { take, skip, orderBy };\n};\n\nconst LinkList = () => {\n  const history = useHistory();\n  const isNewPage = history.location.pathname.includes(\"new\");\n  const pageIndexParams = history.location.pathname.split(\"/\");\n  const page = parseInt(pageIndexParams[pageIndexParams.length - 1]);\n\n  const pageIndex = page ? (page - 1) * LINKS_PER_PAGE : 0;\n\n  const { data, loading, error, subscribeToMore } = useQuery(FEED_QUERY, {\n    variables: getQueryVariables(isNewPage, page),\n    // 네트워크에서 쿼리를 불러오고 캐시와 비교해서 내용이 다를 경우에만 업데이트함\n    fetchPolicy: \"cache-and-network\",\n  });\n\n  subscribeToMore({\n    document: NEW_LINKS_SUBSCRIPTION,\n    // prev : 이전 데이터, subscriptionData : 서버에서 푸쉬 받은 데이터(document에서 정의한 항목으로 받음)\n    updateQuery: (prev, { subscriptionData }) => {\n      if (!subscriptionData.data) return prev;\n      const newLink = subscriptionData.data.newLink;\n      const exists = prev.feed.links.find(({ id }) => id === newLink.id);\n      if (exists) return prev;\n\n      return Object.assign({}, prev, {\n        feed: {\n          links: [newLink, ...prev.feed.links],\n          count: prev.feed.links.length + 1,\n          __typename: prev.feed.__typename,\n        },\n      });\n    },\n  });\n\n  subscribeToMore({\n    document: NEW_VOTES_SUBSCRIPTION,\n  });\n\n  return (\n    <>\n      {/* {loading && <p>Loading...</p>} */}\n      {error && <pre>{JSON.stringify(error, null, 2)}</pre>}\n      {data && (\n        <>\n          {getLinksToRender(isNewPage, data).map((link, index) => (\n            <Link key={link.id} link={link} index={index + pageIndex} />\n          ))}\n          {isNewPage && (\n            <div className=\"flex ml4 mv3 gray\">\n              <div\n                className=\"pointer mr2\"\n                onClick={() => {\n                  if (page > 1) {\n                    history.push(`/new/${page - 1}`);\n                  }\n                }}\n              >\n                Previous\n              </div>\n              <div\n                className=\"pointer\"\n                onClick={() => {\n                  if (page <= data.feed.count / LINKS_PER_PAGE) {\n                    const nextPage = page + 1;\n                    history.push(`/new/${nextPage}`);\n                  }\n                }}\n              >\n                Next\n              </div>\n              <Pagination\n                size=\"small\"\n                current={page}\n                total={data.feed.count}\n                defaultPageSize={5}\n                onChange={(page) => {\n                  history.push(`/new/${page}`);\n                }}\n              />\n            </div>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default LinkList;\n","/home/jung0han/Projects/mcqms-react-graphql/client/src/components/Login.js",[],"/home/jung0han/Projects/mcqms-react-graphql/client/src/components/Search.js",[],"/home/jung0han/Projects/mcqms-react-graphql/client/src/components/Header.js",[],"/home/jung0han/Projects/mcqms-react-graphql/client/src/container/layout/HeadMenu.js",[],"/home/jung0han/Projects/mcqms-react-graphql/client/src/container/layout/SideMenu.js",[],"/home/jung0han/Projects/mcqms-react-graphql/client/src/container/pages/DevManage/RequestList.js",[],"/home/jung0han/Projects/mcqms-react-graphql/client/src/components/Link.js",[],"/home/jung0han/Projects/mcqms-react-graphql/client/src/utils.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":99,"column":17,"nodeType":"69","messageId":"70","endLine":99,"endColumn":24},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]